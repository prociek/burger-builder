{"version":3,"sources":["components/Order/Order.module.css","containers/Orders/Orders.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","price","ingredients","ingrList","key","push","className","classes","Ingredient","parseFloat","toFixed","connect","state","orders","order","loading","token","user","userId","id","dispatch","onFetchOrders","fetchOrders","withError","useEffect","Spinner","Orders","map","o","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,4B,oBCA5DD,EAAOC,QAAU,CAAC,OAAS,yB,2GCwBZC,EArBD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAChBC,EAAW,GACjB,IAAK,IAAIC,KAAOF,EACdC,EAASE,KACP,sBAEEC,UAAWC,IAAQC,WAFrB,mBAGKJ,EAHL,aAGaF,EAAYE,GAHzB,MACOA,IAMX,OACE,0BAASE,UAAWC,IAAQP,MAA5B,UACE,gDAAmBG,KACnB,2CACS,mCAASM,WAAWR,GAAOS,QAAQ,GAAnC,e,iCCuBAC,uBAfS,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKE,OAII,SAAAC,GACzB,MAAO,CACLC,cAAe,SAACL,EAAOE,GAAR,OAAmBE,EAASE,YAAYN,EAAOE,QAInDP,CAGbY,aAnCa,SAAC,GAAuD,IAArDF,EAAoD,EAApDA,cAAeL,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,OAAQH,EAAsB,EAAtBA,QAASF,EAAa,EAAbA,OAKvD,OAJAW,qBAAU,WACRH,EAAcL,EAAOE,KACpB,CAACG,EAAeL,EAAOE,IAEnBH,EACL,cAACU,EAAA,EAAD,IAEA,0BAASnB,UAAWC,IAAQmB,OAA5B,UACE,+CACCb,EAAOc,KAAI,SAAAC,GAAC,OACX,cAAC,EAAD,eAAsBA,GAAVA,EAAET,YAwBFU","file":"static/js/5.c71e9d08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3rMfY\",\"Ingredient\":\"Order_Ingredient__1c2wT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders_Orders__1_1N2\"};","import React from \"react\";\n\nimport classes from \"./Order.module.css\";\n\nconst Order = ({ price, ingredients }) => {\n  const ingrList = [];\n  for (let key in ingredients) {\n    ingrList.push(\n      <span\n        key={key}\n        className={classes.Ingredient}\n      >{`${key} (${ingredients[key]})`}</span>\n    );\n  }\n\n  return (\n    <article className={classes.Order}>\n      <div>Ingredients: {ingrList}</div>\n      <span>\n        Price: <strong>{parseFloat(price).toFixed(2)} $</strong>\n      </span>\n    </article>\n  );\n};\n\nexport default Order;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axios-orders\";\nimport withError from \"../../hoc/withError/withError\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/IU/Spinner/Spinner\";\nimport { fetchOrders } from \"../../store/actions\";\n\nimport classes from \"./Orders.module.css\";\n\nconst Orders = ({ onFetchOrders, token, userId, loading, orders }) => {\n  useEffect(() => {\n    onFetchOrders(token, userId);\n  }, [onFetchOrders, token, userId]);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <section className={classes.Orders}>\n      <h2>Your orders: </h2>\n      {orders.map(o => (\n        <Order key={o.id} {...o} />\n      ))}\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.user.token,\n    userId: state.user.id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withError(Orders, axios));\n"],"sourceRoot":""}