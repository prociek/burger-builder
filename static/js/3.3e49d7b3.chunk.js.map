{"version":3,"sources":["components/IU/Input/Input.js","components/IU/Input/Input.module.css","shared/utility.js","components/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["Input","props","inputElement","attachedClasses","classes","isValid","touched","push","Invalid","elementType","className","join","elementConfig","name","value","onChange","changed","options","map","opt","display","InputElement","Label","htmlFor","module","exports","checkValidation","rules","required","trim","minLength","length","maxLength","isEmail","RegExp","test","CheckoutSummary","ingredients","checkoutCancel","checkoutContinue","Burger","Button","clicked","btnType","connect","state","burger","price","totalPrice","loading","order","token","user","userId","id","dispatch","onPurchaseBurger","orderData","purchaseBurger","withError","useState","type","placeholder","validation","email","street","postal","deliveryMethod","orderForm","setOrderForm","formValid","setFormValid","onChangeHandler","e","newInput","target","newState","formIsValid","form","Spinner","inputs","key","onSubmit","preventDefault","date","Date","disabled","Classes","ContactData","axios","purchased","style","marginTop","history","goBack","path","match","component","to"],"mappings":"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","file":"static/js/3.3e49d7b3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst Input = (props) => {\n  let inputElement = null;\n  let attachedClasses = [classes.Input];\n  if (props.isValid && props.touched) {\n    attachedClasses.push(classes.Invalid);\n  }\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={attachedClasses.join(\" \")}\n          {...props.elementConfig}\n          name={props.name}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          name={props.name}\n          className={attachedClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          name={props.name}\n          className={attachedClasses.join(\" \")}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map((opt) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.display}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = <input {...props} />;\n  }\n  return (\n    <div className={classes.InputElement}>\n      <label className={classes.Label} htmlFor={props.name}>\n        {props.name}\n      </label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputElement\":\"Input_InputElement__1plo6\",\"Label\":\"Input_Label__1BhVk\",\"Input\":\"Input_Input__2iGzR\",\"Invalid\":\"Input_Invalid__2Zq_q\"};","export const checkValidation = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.trim().length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.trim().length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const re = new RegExp(\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n    );\n    isValid = re.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2jgBL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1OyT3\"};","import React from \"react\";\nimport Burger from \"../Burger/Burger\";\nimport Button from \"../IU/Button/Button\";\n\nimport classes from \"./CheckoutSummary.module.css\";\n\nconst CheckoutSummary = ({ ingredients, checkoutCancel, checkoutContinue }) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <Burger ingredients={ingredients} />\n      <Button clicked={checkoutCancel} btnType=\"Danger\">\n        CANCEL\n      </Button>\n      <Button clicked={checkoutContinue} btnType=\"Success\">\n        CONTINUE\n      </Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport withError from \"../../../hoc/withError/withError\";\nimport axios from \"../../../axios-orders\";\nimport Button from \"../../../components/IU/Button/Button\";\nimport Spinner from \"../../../components/IU/Spinner/Spinner\";\nimport Input from \"../../../components/IU/Input/Input\";\nimport Classes from \"./ContactData.module.css\";\nimport { purchaseBurger } from \"../../../store/actions\";\nimport { checkValidation } from \"../../../shared/utility\";\n\nconst ContactData = props => {\n  const [orderForm, setOrderForm] = useState({\n    name: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"text\",\n        placeholder: \"Your Name\"\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 4\n      },\n      isValid: false,\n      touched: false\n    },\n    email: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"email\",\n        placeholder: \"Your E-mail\"\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      isValid: false,\n      touched: false\n    },\n    street: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"text\",\n        placeholder: \"Your Street\"\n      },\n      value: \"\",\n      validation: {\n        required: true\n      },\n      isValid: false,\n      touched: false\n    },\n    postal: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"text\",\n        placeholder: \"Your Postal\"\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 5,\n        maxLength: 5\n      },\n      isValid: false,\n      touched: false\n    },\n    deliveryMethod: {\n      elementType: \"select\",\n      elementConfig: {\n        options: [\n          { value: \"fastest\", display: \"Fastest\" },\n          { value: \"cheepest\", display: \"Cheepest\" }\n        ]\n      },\n      value: \"fastest\",\n      validation: {\n        required: true\n      },\n      isValid: true,\n      touched: false\n    }\n  });\n  const [formValid, setFormValid] = useState(false);\n\n  const handleOrder = e => {\n    e.preventDefault();\n    let orderData = {};\n    for (let name in orderForm) {\n      orderData[name] = orderForm[name].value;\n    }\n    const order = {\n      ingredients: props.ingredients,\n      price: props.price,\n      date: new Date(),\n      userId: props.userId,\n      orderData\n    };\n    props.onPurchaseBurger(order, props.token);\n  };\n\n  const onChangeHandler = e => {\n    const newInput = {\n      ...orderForm[e.target.name],\n      value: e.target.value,\n      isValid: checkValidation(\n        e.target.value,\n        orderForm[e.target.name].validation\n      ),\n      touched: true\n    };\n    const newState = { ...orderForm, [e.target.name]: newInput };\n\n    let formIsValid = true;\n    for (let name in newState) {\n      formIsValid = newState[name].isValid && formIsValid;\n    }\n\n    setFormValid(formIsValid);\n\n    setOrderForm(newState);\n  };\n\n  let form = <Spinner />;\n  if (!props.loading) {\n    let inputs = [];\n    for (let key in orderForm) {\n      inputs.push(\n        <Input\n          key={key}\n          name={key}\n          elementType={orderForm[key].elementType}\n          elementConfig={orderForm[key].elementConfig}\n          value={orderForm[key].value}\n          isValid={!orderForm[key].isValid}\n          touched={orderForm[key].touched}\n          changed={onChangeHandler}\n        />\n      );\n    }\n    form = (\n      <form onSubmit={handleOrder}>\n        {inputs}\n        <Button btnType=\"Success\" disabled={!formValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n  }\n  return (\n    <section className={Classes.ContactData}>\n      <h4>Enter your Contact Data</h4>\n      {form}\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burger.ingredients,\n    price: state.burger.totalPrice,\n    loading: state.order.loading,\n    token: state.user.token,\n    userId: state.user.id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPurchaseBurger: (orderData, token) =>\n      dispatch(purchaseBurger(orderData, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withError(ContactData, axios));\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport CheckoutSummary from \"../../components/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\nimport { connect } from \"react-redux\";\n\nconst Checkout = props => {\n  return props.ingredients && !props.purchased ? (\n    <section style={{ marginTop: \"40px\" }}>\n      <CheckoutSummary\n        checkoutCancel={props.history.goBack}\n        checkoutContinue={() => props.history.push(\"/checkout/contact-data\")}\n        ingredients={props.ingredients}\n      />\n      <Route\n        path={`${props.match.path}/contact-data`}\n        component={ContactData}\n      />\n    </section>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burger.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n"],"sourceRoot":""}